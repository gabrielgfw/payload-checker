{"version":3,"file":"static/js/198.910e374f.chunk.js","mappings":"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","sources":["services/ProjectSession.js","utils/DateUtils.js","components/ConfirmModal/ConfirmModal.js","components/Analyzer/Analyzer.js","pages/Checker.js"],"sourcesContent":["import { DateUtils } from \"../utils/DateUtils\";\r\nconst STORAGE_PREFIX = \"payload_checker_saves\";\r\nconst DATE = new DateUtils();\r\n\r\nexport function loadProjects() {\r\n  return localStorage.getItem(STORAGE_PREFIX);\r\n}\r\n\r\nexport function saveProject(project) {\r\n  console.log(`# Save Project:`);\r\n  console.log(project);\r\n  const currentSave = loadProjects();\r\n  const currentDate = DATE.newFormatedDate('DD-MM-yyyy-hh:mm:ss');\r\n  let newSave;\r\n\r\n  if (currentSave) {\r\n    newSave = JSON.parse(currentSave);\r\n    const projectAlreadyExists = newSave.projects.find(p => p.uuid === project.uuid);\r\n    if (projectAlreadyExists) { newSave.projects = newSave.projects.filter(p => p.uuid !== projectAlreadyExists.uuid) };\r\n    project.last_update = currentDate;\r\n    newSave.projects.push(project);\r\n\r\n  } else {\r\n    project.created_at = currentDate;\r\n    project.last_update = currentDate;\r\n    newSave = { created_at: currentDate, projects: [project] };\r\n  }\r\n\r\n  newSave.last_update = currentDate;\r\n  localStorage.setItem(STORAGE_PREFIX, JSON.stringify(newSave));\r\n}\r\n\r\nexport function deleteProject() {\r\n  localStorage.removeItem(STORAGE_PREFIX);\r\n}\r\n\r\nexport function saveInformation(information) {\r\n  localStorage.setItem(JSON.stringify(information));\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport class DateUtils {\r\n  constructor() {\r\n    moment.locale(this.__handleLocation());\r\n  }\r\n\r\n  __handleLocation() {\r\n    const DEFAULT = \"pt-BR\";\r\n    const userLocation = window.clientInformation?.language;\r\n    return userLocation ?? DEFAULT;\r\n  }\r\n\r\n  newFormatedDate(format) {\r\n    return moment().format(format);\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal } from 'antd';\r\n\r\nconst ConfirmModal = ({ buttonText, modalTitle, modalText, confirmAction }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  const handleOk = () => {\r\n    confirmAction();\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" danger onClick={showModal}>\r\n        {buttonText}\r\n      </Button>\r\n      <Modal title={modalTitle} open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n        <p>{modalText}</p>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default ConfirmModal;","import { Button, Collapse, Form, Input, message, Switch, Table } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport 'animate.css';\r\nimport './Analyzer.css';\r\nimport { DownloadOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport * as ProjectSession from '../../services/ProjectSession';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction Analyzer() {\r\n  const [editingRow, setEditingRow] = useState();\r\n  const [formPayloadAnalyzed] = Form.useForm();\r\n  const [projectId, setProjectId] = useState('');\r\n  const [payloadChecked, setPayloadChecked] = useState({});\r\n  const [propList, setPropList] = useState([]);\r\n\r\n  // Save on changes:\r\n  useEffect(() => {\r\n    if (propList.length && payloadChecked) {\r\n      saveCurrentChanges();\r\n    }\r\n  }, [propList, payloadChecked]);\r\n\r\n\r\n  // Load once:\r\n  useEffect(() => {\r\n    const storagedProject = JSON.parse(ProjectSession.loadProjects());\r\n    if (storagedProject) {\r\n      console.log(`# Loaded Project found!!`);\r\n      console.log(storagedProject);\r\n      setPayloadChecked(storagedProject.projects[0].payload_checkd);\r\n      setPropList(storagedProject.projects[0].prop_list);\r\n    }\r\n  }, []);\r\n\r\n  const defaultColumns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'propertyName',\r\n      key: 'propertyName',\r\n      render: (text, record) => {\r\n        if (editingRow === record.key) {\r\n          return (\r\n            <Form.Item\r\n              name=\"propertyName\"\r\n            >\r\n              <Input className={\"editable-cell\"} />\r\n            </Form.Item>\r\n          );\r\n        } else {\r\n          return text\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'Type',\r\n      dataIndex: 'type',\r\n      key: 'type',\r\n      render: (text, record) => {\r\n        if (editingRow === record.key) {\r\n          return (\r\n            <Form.Item\r\n              name=\"type\"\r\n            >\r\n              <Input className=\"editable-cell\" />\r\n            </Form.Item>\r\n          );\r\n        } else {\r\n          return text\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      render: (text, record) => {\r\n        if (editingRow === record.key) {\r\n          return (\r\n            <Form.Item\r\n              name=\"description\"\r\n            >\r\n              <Input className=\"editable-cell\" />\r\n            </Form.Item>\r\n          );\r\n        } else {\r\n          return text\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'Fill rule',\r\n      dataIndex: 'fillRule',\r\n      key: 'fillRule',\r\n      render: (text, record) => {\r\n        if (editingRow === record.key) {\r\n          return (\r\n            <Form.Item\r\n              name=\"fillRule\"\r\n            >\r\n              <Input className=\"editable-cell\" />\r\n            </Form.Item>\r\n          );\r\n        } else {\r\n          return text\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'Required',\r\n      dataIndex: 'required',\r\n      key: 'required',\r\n      render: (_, record) => {\r\n        return (\r\n          <Form.Item\r\n            name=\"required\"\r\n          >\r\n            <Switch style={{ marginTop: '20px' }} defaultChecked onChange={(checked => {\r\n              changeRequiredRow(record.key, checked);\r\n              formPayloadAnalyzed.setFieldValue(\"required\", checked);\r\n            })} />\r\n          </Form.Item>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      dataIndex: 'validated',\r\n      key: 'validated',\r\n      render: (_, record) => {\r\n        return (\r\n          <>\r\n            <Button type=\"link\" onClick={() => {\r\n              setEditingRow(record.key);\r\n              formPayloadAnalyzed.setFieldsValue({\r\n                propertyName: record.propertyName,\r\n                type: record.type,\r\n                description: record.description,\r\n                fillRule: record.fillRule,\r\n                required: record.required\r\n              })\r\n            }}>Edit</Button>\r\n            <Button type=\"link\" htmlType=\"submit\">Save</Button>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  function startExamination(values) {\r\n    const { payloadInput } = values;\r\n    try {\r\n      const payloadParsed = parseInput(payloadInput);\r\n      const payloadSimplified = reduceArraysForSimplicity(payloadParsed);\r\n      const examined = examinePayload(payloadSimplified, []);\r\n      setPayloadChecked(payloadSimplified);\r\n      setPropList([...examined]);\r\n      feedbackMessage(true, 'Payload checked');\r\n    } catch (error) {\r\n      feedbackMessage(false, error);\r\n    }\r\n  }\r\n\r\n\r\n  function handleDeleteProject() {\r\n    ProjectSession.deleteProject();\r\n    setProjectId('');\r\n    setPayloadChecked({});\r\n    setPropList([]);\r\n    feedbackMessage(true, 'Project deleted');\r\n  }\r\n\r\n\r\n  function saveCurrentChanges() {\r\n    const newUuid = uuidv4();\r\n    if (!projectId) setProjectId(newUuid);\r\n    ProjectSession.saveProject({\r\n      uuid: projectId ? projectId : newUuid,\r\n      payload_checked: payloadChecked,\r\n      prop_list: propList\r\n    });\r\n  }\r\n\r\n\r\n  function feedbackMessage(success, text) {\r\n    success ? message.success(text) : message.error(text)\r\n  }\r\n\r\n  function parseInput(payloadInput) {\r\n    try {\r\n      return JSON.parse(payloadInput);\r\n    } catch (error) {\r\n      throw 'Not a valid payload';\r\n    }\r\n  }\r\n\r\n  function reduceArraysForSimplicity(payloadParsed) {\r\n    let overallArrayClean = Array.isArray(payloadParsed) ? payloadParsed.slice(0, 1) : payloadParsed;\r\n\r\n    for (let prop in overallArrayClean) {\r\n      const propType = returnPropertyType(overallArrayClean[prop]);\r\n      if (propType === 'array') {\r\n        if (overallArrayClean[prop].length > 0) {\r\n          overallArrayClean[prop] = overallArrayClean[prop].slice(0, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    return overallArrayClean;\r\n  }\r\n\r\n  function examinePayload(payloadParsed, propertiesStack) {\r\n    let properties = propertiesStack;\r\n\r\n    for (let prop in payloadParsed) {\r\n      const propType = returnPropertyType(payloadParsed[prop]);\r\n      const propZerada = prop == 0;\r\n\r\n      if (propType === 'object' || propType === 'array') {\r\n        properties.push({\r\n          propertyName: propZerada ? '-- start --' : `${prop} (START)`,\r\n          type: propType,\r\n          description: '',\r\n          required: true,\r\n          fillRule: '',\r\n          validated: false\r\n        });\r\n        examinePayload(payloadParsed[prop], properties);\r\n\r\n        properties.push({\r\n          propertyName: propZerada ? '-- end --' : `${prop} (END)`,\r\n          type: propType,\r\n          description: '',\r\n          required: true,\r\n          fillRule: '',\r\n          validated: false\r\n        });\r\n\r\n      } else {\r\n        properties.push({\r\n          propertyName: prop,\r\n          type: propType,\r\n          description: '',\r\n          required: true,\r\n          fillRule: '',\r\n          validated: false\r\n        });\r\n      }\r\n    }\r\n\r\n    return applyIndexValue(properties);\r\n  }\r\n\r\n  function applyIndexValue(propertiesList) {\r\n    return propertiesList.map((prop, index) => {\r\n      return { key: index + 1, ...prop };\r\n    });\r\n  }\r\n\r\n  function returnPropertyType(prop) {\r\n    if (Array.isArray(prop)) return 'array';\r\n    if (prop === \"\") return 'string'\r\n    if (prop === 0) return 'number'\r\n    if (!prop) return 'null';\r\n    return typeof (prop);\r\n  }\r\n\r\n  function saveRowChanges(values) {\r\n    let selectedRowInformation = propList.find(pos => pos.key === editingRow);\r\n    let collapsedObjects = { ...selectedRowInformation, ...values };\r\n    let indexPosition = propList.findIndex(pos => pos.key === editingRow);\r\n    let allPropList = [...propList];\r\n    allPropList[indexPosition] = collapsedObjects;\r\n    setPropList(allPropList);\r\n    setEditingRow(null);\r\n  }\r\n\r\n  function changeRequiredRow(rowKey, boolean) {\r\n    let selectedRowInformation = propList.find(pos => pos.key === rowKey);\r\n    selectedRowInformation.required = boolean;\r\n    let indexPosition = propList.findIndex(pos => pos.key === editingRow);\r\n    let allPropList = [...propList];\r\n    allPropList[indexPosition] = selectedRowInformation;\r\n    setPropList(allPropList);\r\n  }\r\n\r\n  function handlerRowBackground(rowProperties) {\r\n    return rowProperties.required ? '' : 'not-required-row';\r\n  }\r\n\r\n  function exportToCSV() {\r\n    let text = `Name;Type;Description;Fill rule;Required\\n`;\r\n    propList.forEach(line => {\r\n      text += `${line.propertyName};${line.type};${line.description};${line.fillRule};${line.required}\\n`\r\n    });\r\n    const blob = new Blob([text], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    const url = URL.createObjectURL(blob);\r\n    link.href = url;\r\n    link.setAttribute('download', 'payload-checker.csv');\r\n    link.click();\r\n  }\r\n\r\n  function exportToXLSX() {\r\n    const propFiltered = propList.map(p => {\r\n      return {\r\n        'Name': p.propertyName,\r\n        'Type': p.type,\r\n        'Description': p.description,\r\n        'Fill rule': p.fillRule,\r\n        'Required': p.required\r\n      }\r\n    });\r\n    const sheet = XLSX.utils.json_to_sheet(propFiltered);\r\n    const book = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(book, sheet, 'Sheet1');\r\n    const xlsDocument = XLSX.write(book, { type: 'buffer', bookType: 'xlsx' });\r\n    const blob = new Blob([xlsDocument], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', 'payload-checker.xlsx');\r\n    link.click();\r\n  }\r\n\r\n  function exportToTXT() {\r\n    let text = `Name\\tType\\tDescription\\tFill rule\\tRequired\\n`;\r\n    propList.forEach(line => {\r\n      text += `${line.propertyName}\\t${line.type}\\t${line.description}\\t${line.fillRule}\\t${line.required}\\n`\r\n    });\r\n    const blob = new Blob([text], { type: 'text/plain;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    const url = URL.createObjectURL(blob);\r\n    link.href = url;\r\n    link.setAttribute('download', 'payload-checker.txt');\r\n    link.click();\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {propList.length ?\r\n        <div\r\n          className=\"animate__animated animate__fadeInLeft\"\r\n          style={{ display: 'flex', flexDirection: 'row', width: '100%', justifyContent: 'end', paddingRight: '20px' }}\r\n        >\r\n          <div>\r\n            <Button\r\n              style={{ margin: '10px' }}\r\n              type=\"primary\"\r\n              onClick={exportToCSV}\r\n            >\r\n              <DownloadOutlined />\r\n              Export to CSV\r\n            </Button>\r\n            <Button\r\n              style={{ margin: '10px' }}\r\n              type=\"primary\"\r\n              onClick={exportToXLSX}\r\n            >\r\n              <DownloadOutlined />\r\n              Export to XLSX\r\n            </Button>\r\n            <Button\r\n              style={{ margin: '10px' }}\r\n              type=\"primary\"\r\n              onClick={exportToTXT}\r\n            >\r\n              <DownloadOutlined />\r\n              Export to TXT\r\n            </Button>\r\n\r\n            <ConfirmModal\r\n              buttonText=\"Delete Project\"\r\n              modalTitle=\"Delete current project\"\r\n              modalText=\"Confirm to delete current project\"\r\n              confirmAction={handleDeleteProject}\r\n            />\r\n          </div>\r\n        </div>\r\n        : <></>}\r\n\r\n      <Form form={formPayloadAnalyzed} onFinish={saveRowChanges}>\r\n        {propList.length ?\r\n          <div\r\n            className=\"animate__animated animate__fadeInLeft\"\r\n            style={{ margin: '10px 20px 20px 20px' }}>\r\n            <Table\r\n              rowClassName={(record, index) => handlerRowBackground(record)}\r\n              dataSource={propList}\r\n              columns={defaultColumns}\r\n              sticky={true}\r\n              pagination={false}\r\n              scroll={{ y: '50vh' }}\r\n              bordered={false}\r\n              size={'small'}\r\n              style={{ boxShadow: '0px 0px 10px 0px rgb(34 34 34 / 15%)', fontSize: \"5px\" }}\r\n            />\r\n          </div>\r\n          : <></>}\r\n      </Form>\r\n\r\n      <div style={{ display: 'flex', flexDirection: 'row', width: '100%', justifyContent: 'space-between', padding: '20px', paddingBottom: '0px' }}>\r\n        <Form name=\"payloadAnalyzed\" onFinish={startExamination} style={{ width: '80%' }}>\r\n          <div style={{ width: '100%' }}>\r\n            <Collapse\r\n              className=\"collapse-wrapper\"\r\n              defaultActiveKey={['1']}\r\n              style={{ backgroundColor: 'rgb(16,16,16,0.85)', border: 'none', borderBottom: '20px', borderRadius: '10px', boxShadow: '0px 0px 10px 0px rgb(34 34 34 / 15%)' }}\r\n            >\r\n              <Panel\r\n                header=\"Payload to be checked\"\r\n                key=\"1\"\r\n                style={{ border: 'none' }}\r\n              >\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'left', padding: '15px', paddingTop: '0' }}>\r\n                  <span>\r\n                    Enter the payload to be checked below, all payload fields will be detailed.\r\n                  </span>\r\n                </div>\r\n                <Form.Item name=\"payloadInput\">\r\n                  <TextArea\r\n                    placeholder=\"Paste a valid payload to be checked.\"\r\n                    style={{\r\n                      resize: 'none',\r\n                      border: 'none',\r\n                      maxHeight: '200px',\r\n                      minHeight: '200px',\r\n                      overflowY: \"scroll\",\r\n                      borderRadius: '5px',\r\n                      boxShadow: '0px 0px 10px 0px rgb(34 34 34 / 5%)'\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item style={{ marginBottom: '5px' }}>\r\n                  <Button\r\n                    style={{ width: '100%', height: '50px', boxShadow: '0px 0px 10px 0px rgb(34 34 34 / 20%)' }}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                  >\r\n                    <strong>Check Payload</strong>\r\n                  </Button>\r\n                </Form.Item>\r\n              </Panel>\r\n            </Collapse>\r\n\r\n          </div>\r\n        </Form>\r\n        <div style={{ width: '100%' }}>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Analyzer\r\n","import React from 'react'\r\nimport Analyzer from '../components/Analyzer/Analyzer';\r\n\r\nfunction Checker() {\r\n  return (\r\n    <>\r\n      <Analyzer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Checker\r\n"],"names":["STORAGE_PREFIX","DATE","moment","this","__handleLocation","userLocation","window","clientInformation","language","format","loadProjects","localStorage","getItem","buttonText","modalTitle","modalText","confirmAction","useState","isModalOpen","setIsModalOpen","type","danger","onClick","title","open","onOk","onCancel","Panel","Collapse","editingRow","setEditingRow","Form","formPayloadAnalyzed","projectId","setProjectId","payloadChecked","setPayloadChecked","propList","setPropList","useEffect","length","newUuid","uuidv4","project","console","log","newSave","currentSave","currentDate","newFormatedDate","projectAlreadyExists","JSON","parse","projects","find","p","uuid","filter","last_update","push","created_at","setItem","stringify","ProjectSession","payload_checked","prop_list","saveCurrentChanges","storagedProject","payload_checkd","defaultColumns","dataIndex","key","render","text","record","name","className","_","style","marginTop","defaultChecked","onChange","checked","rowKey","boolean","selectedRowInformation","pos","required","indexPosition","findIndex","allPropList","changeRequiredRow","setFieldValue","setFieldsValue","propertyName","description","fillRule","htmlType","feedbackMessage","success","message","examinePayload","payloadParsed","propertiesStack","properties","prop","propType","returnPropertyType","propZerada","validated","map","index","Array","isArray","display","flexDirection","width","justifyContent","paddingRight","margin","forEach","line","blob","Blob","link","document","createElement","url","URL","createObjectURL","href","setAttribute","click","DownloadOutlined","propFiltered","sheet","XLSX","book","xlsDocument","bookType","removeItem","form","onFinish","values","collapsedObjects","rowClassName","dataSource","columns","sticky","pagination","scroll","y","bordered","size","boxShadow","fontSize","padding","paddingBottom","payloadInput","error","parseInput","payloadSimplified","overallArrayClean","slice","reduceArraysForSimplicity","examined","defaultActiveKey","backgroundColor","border","borderBottom","borderRadius","header","alignItems","paddingTop","TextArea","placeholder","resize","maxHeight","minHeight","overflowY","marginBottom","height"],"sourceRoot":""}