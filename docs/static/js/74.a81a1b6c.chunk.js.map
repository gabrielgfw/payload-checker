{"version":3,"file":"static/js/74.a81a1b6c.chunk.js","mappings":"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","sources":["services/ProjectSession.js","utils/DateUtils.js","components/ConfirmModal/ConfirmModal.js","components/ExportButton/ExportButton.js","services/ExtensionConversor.js","components/Analyzer/Analyzer.js","pages/Checker.js"],"sourcesContent":["import { DateUtils } from \"../utils/DateUtils\";\r\nconst STORAGE_PREFIX = \"payload_checker_saves\";\r\nconst DATE = new DateUtils();\r\n\r\nexport function loadStorageFromClient() {\r\n  return localStorage.getItem(STORAGE_PREFIX);\r\n}\r\n\r\nexport function saveProject(project) {\r\n  const clientStorageSave = loadStorageFromClient();\r\n  const currentDate = DATE.newFormatedDate('DD-MM-yyyy hh:mm:ss');\r\n  let newSave;\r\n\r\n  if (clientStorageSave) {\r\n    newSave = JSON.parse(clientStorageSave);\r\n    const projectAlreadyExists = newSave.projects.find(p => p.uuid === project.uuid);\r\n    if (projectAlreadyExists) { newSave.projects = newSave.projects.filter(p => p.uuid !== projectAlreadyExists.uuid) };\r\n    project.last_update = currentDate;\r\n    newSave.projects.push(project);\r\n\r\n  } else {\r\n    project.created_at = currentDate;\r\n    project.last_update = currentDate;\r\n    newSave = { created_at: currentDate, projects: [project] };\r\n  }\r\n\r\n  newSave.selectedProject = project.uuid;\r\n  newSave.last_update = currentDate;\r\n  localStorage.setItem(STORAGE_PREFIX, JSON.stringify(newSave));\r\n}\r\n\r\nexport function deleteProject(projectId) {\r\n  const clientStorageSave = JSON.parse(loadStorageFromClient());\r\n  console.log(`# Client Storage Save:`);\r\n  console.log(clientStorageSave);\r\n  if (clientStorageSave) {\r\n    clientStorageSave.projects = clientStorageSave.projects.filter(p => p.uuid !== projectId);\r\n    clientStorageSave.selectedProject = null;\r\n    localStorage.setItem(STORAGE_PREFIX, JSON.stringify(clientStorageSave));\r\n  }\r\n}\r\n\r\nexport function saveInformation(information) {\r\n  localStorage.setItem(JSON.stringify(information));\r\n}\r\n\r\nexport function setCurrentProject(projectId) {\r\n  const clientStorageSave = loadStorageFromClient();\r\n  if (clientStorageSave) clientStorageSave.selectedProject = projectId;\r\n}\r\n\r\n","import moment from \"moment\";\r\n\r\nexport class DateUtils {\r\n  constructor() {\r\n    moment.locale(this.__handleLocation());\r\n  }\r\n\r\n  __handleLocation() {\r\n    const DEFAULT = \"pt-BR\";\r\n    const userLocation = window.navigator?.language;\r\n    return userLocation ?? DEFAULT;\r\n  }\r\n\r\n  newFormatedDate(format) {\r\n    return moment().format(format);\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal } from 'antd';\r\n\r\nconst ConfirmModal = ({ buttonText, buttonType, buttonDanger, modalTitle, modalText, confirmAction }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  const handleOk = () => {\r\n    confirmAction();\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Button type={buttonType} danger={buttonDanger} onClick={showModal}>\r\n        {buttonText}\r\n      </Button>\r\n      <Modal title={modalTitle} open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n        <p>{modalText}</p>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default ConfirmModal;","import React, { useContext } from 'react';\r\nimport { SessionContext } from '../Analyzer/Analyzer';\r\nimport * as ExtensionConversor from '../../services/ExtensionConversor';\r\nimport { Button } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n\r\n\r\nfunction ExportButton() {\r\n  const { projectId, propList, payloadChecked } = useContext(SessionContext);\r\n\r\n  function handleExportToCSV() {\r\n    ExtensionConversor.exportToCSV(propList);\r\n  }\r\n\r\n  function handleExportToXLSX() {\r\n    ExtensionConversor.exportToXLSX(propList);\r\n  }\r\n\r\n  function handleExportToTXT() {\r\n    ExtensionConversor.exportToTXT(propList);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        style={{ margin: '10px' }}\r\n        type=\"primary\"\r\n        onClick={handleExportToCSV}\r\n      >\r\n        <DownloadOutlined />\r\n        Export to CSV\r\n      </Button>\r\n      <Button\r\n        style={{ margin: '10px' }}\r\n        type=\"primary\"\r\n        onClick={handleExportToXLSX}\r\n      >\r\n        <DownloadOutlined />\r\n        Export to XLSX\r\n      </Button>\r\n      <Button\r\n        style={{ margin: '10px' }}\r\n        type=\"primary\"\r\n        onClick={handleExportToTXT}\r\n      >\r\n        <DownloadOutlined />\r\n        Export to TXT\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExportButton;","import * as XLSX from 'xlsx';\r\n\r\n\r\nexport function exportToCSV(propList) {\r\n  let text = `Name;Type;Description;Fill rule;Required\\n`;\r\n  propList.forEach(line => {\r\n    text += `${line.propertyName};${line.type};${line.description};${line.fillRule};${line.required}\\n`\r\n  });\r\n  const blob = new Blob([text], { type: 'text/csv;charset=utf-8;' });\r\n  const link = document.createElement('a');\r\n  const url = URL.createObjectURL(blob);\r\n  link.href = url;\r\n  link.setAttribute('download', 'payload-checker.csv');\r\n  link.click();\r\n}\r\n\r\nexport function exportToXLSX(propList) {\r\n  const propFiltered = propList.map(p => {\r\n    return {\r\n      'Name': p.propertyName,\r\n      'Type': p.type,\r\n      'Description': p.description,\r\n      'Fill rule': p.fillRule,\r\n      'Required': p.required\r\n    }\r\n  });\r\n  const sheet = XLSX.utils.json_to_sheet(propFiltered);\r\n  const book = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(book, sheet, 'Sheet1');\r\n  const xlsDocument = XLSX.write(book, { type: 'buffer', bookType: 'xlsx' });\r\n  const blob = new Blob([xlsDocument], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8;' });\r\n  const url = URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.setAttribute('download', 'payload-checker.xlsx');\r\n  link.click();\r\n}\r\n\r\nexport function exportToTXT(propList) {\r\n  let text = `Name\\tType\\tDescription\\tFill rule\\tRequired\\n`;\r\n  propList.forEach(line => {\r\n    text += `${line.propertyName}\\t${line.type}\\t${line.description}\\t${line.fillRule}\\t${line.required}\\n`\r\n  });\r\n  const blob = new Blob([text], { type: 'text/plain;charset=utf-8;' });\r\n  const link = document.createElement('a');\r\n  const url = URL.createObjectURL(blob);\r\n  link.href = url;\r\n  link.setAttribute('download', 'payload-checker.txt');\r\n  link.click();\r\n}\r\n","import { Button, Collapse, Form, Input, message, Switch, Table } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\nimport 'animate.css';\r\nimport './Analyzer.css';\r\nimport * as ProjectSession from '../../services/ProjectSession';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\r\nimport ExportButton from '../ExportButton/ExportButton';\r\n\r\nconst { Panel } = Collapse;\r\nexport const SessionContext = createContext(null);\r\n\r\nfunction Analyzer() {\r\n  const [editingRow, setEditingRow] = useState();\r\n  const [formPayloadAnalyzed] = Form.useForm();\r\n  const [projectId, setProjectId] = useState('');\r\n  const [payloadChecked, setPayloadChecked] = useState({});\r\n  const [propList, setPropList] = useState([]);\r\n\r\n  // Save on changes:\r\n  useEffect(() => {\r\n    if (propList.length && payloadChecked) {\r\n      saveCurrentChanges();\r\n    }\r\n  }, [propList, payloadChecked]);\r\n\r\n\r\n  // Load once:\r\n  useEffect(() => {\r\n    const storagedProject = JSON.parse(ProjectSession.loadStorageFromClient());\r\n    if (storagedProject?.selectedProject) {\r\n      const currentProject = storagedProject.projects.find(p => p.uuid === storagedProject.selectedProject);\r\n      setPayloadChecked(currentProject.payload_checked);\r\n      setPropList(currentProject.prop_list);\r\n    }\r\n  }, []);\r\n\r\n  const defaultColumns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'propertyName',\r\n      key: 'propertyName',\r\n      render: (text, record) => {\r\n        if (editingRow === record.key) {\r\n          return (\r\n            <Form.Item\r\n              name=\"propertyName\"\r\n            >\r\n              <Input className={\"editable-cell\"} />\r\n            </Form.Item>\r\n          );\r\n        } else {\r\n          return text\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'Type',\r\n      dataIndex: 'type',\r\n      key: 'type',\r\n      render: (text, record) => {\r\n        if (editingRow === record.key) {\r\n          return (\r\n            <Form.Item\r\n              name=\"type\"\r\n            >\r\n              <Input className=\"editable-cell\" />\r\n            </Form.Item>\r\n          );\r\n        } else {\r\n          return text\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      render: (text, record) => {\r\n        if (editingRow === record.key) {\r\n          return (\r\n            <Form.Item\r\n              name=\"description\"\r\n            >\r\n              <Input className=\"editable-cell\" />\r\n            </Form.Item>\r\n          );\r\n        } else {\r\n          return text\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'Fill rule',\r\n      dataIndex: 'fillRule',\r\n      key: 'fillRule',\r\n      render: (text, record) => {\r\n        if (editingRow === record.key) {\r\n          return (\r\n            <Form.Item\r\n              name=\"fillRule\"\r\n            >\r\n              <Input className=\"editable-cell\" />\r\n            </Form.Item>\r\n          );\r\n        } else {\r\n          return text\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'Required',\r\n      dataIndex: 'required',\r\n      key: 'required',\r\n      render: (_, record) => {\r\n        return (\r\n          <Form.Item\r\n            name=\"required\"\r\n          >\r\n            <Switch style={{ marginTop: '20px' }} defaultChecked onChange={(checked => {\r\n              changeRequiredRow(record.key, checked);\r\n              formPayloadAnalyzed.setFieldValue(\"required\", checked);\r\n            })} />\r\n          </Form.Item>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      dataIndex: 'validated',\r\n      key: 'validated',\r\n      render: (_, record) => {\r\n        return (\r\n          <>\r\n            <Button type=\"link\" onClick={() => {\r\n              setEditingRow(record.key);\r\n              formPayloadAnalyzed.setFieldsValue({\r\n                propertyName: record.propertyName,\r\n                type: record.type,\r\n                description: record.description,\r\n                fillRule: record.fillRule,\r\n                required: record.required\r\n              })\r\n            }}>Edit</Button>\r\n            <Button type=\"link\" htmlType=\"submit\">Save</Button>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  function startExamination(values) {\r\n    const { payloadInput } = values;\r\n    try {\r\n      const payloadParsed = parseInput(payloadInput);\r\n      const payloadSimplified = reduceArraysForSimplicity(payloadParsed);\r\n      const examined = examinePayload(payloadSimplified, []);\r\n      setPayloadChecked(payloadSimplified);\r\n      setPropList([...examined]);\r\n      feedbackMessage(true, 'Payload checked');\r\n    } catch (error) {\r\n      feedbackMessage(false, error);\r\n    }\r\n  }\r\n\r\n\r\n  function handleDeleteProject() {\r\n    ProjectSession.deleteProject(projectId);\r\n    setProjectId('');\r\n    setPayloadChecked({});\r\n    setPropList([]);\r\n    feedbackMessage(true, 'Project deleted');\r\n  }\r\n\r\n\r\n  function saveCurrentChanges() {\r\n    const newUuid = uuidv4();\r\n    if (!projectId) setProjectId(newUuid);\r\n    const projectInfo = {\r\n      uuid: projectId ? projectId : newUuid,\r\n      payload_checked: payloadChecked,\r\n      prop_list: propList\r\n    };\r\n    ProjectSession.saveProject(projectInfo);\r\n  }\r\n\r\n\r\n  function feedbackMessage(success, text) {\r\n    success ? message.success(text) : message.error(text)\r\n  }\r\n\r\n  function parseInput(payloadInput) {\r\n    try {\r\n      return JSON.parse(payloadInput);\r\n    } catch (error) {\r\n      throw 'Not a valid payload';\r\n    }\r\n  }\r\n\r\n  function reduceArraysForSimplicity(payloadParsed) {\r\n    let overallArrayClean = Array.isArray(payloadParsed) ? payloadParsed.slice(0, 1) : payloadParsed;\r\n\r\n    for (let prop in overallArrayClean) {\r\n      const propType = returnPropertyType(overallArrayClean[prop]);\r\n      if (propType === 'array') {\r\n        if (overallArrayClean[prop].length > 0) {\r\n          overallArrayClean[prop] = overallArrayClean[prop].slice(0, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    return overallArrayClean;\r\n  }\r\n\r\n  function examinePayload(payloadParsed, propertiesStack) {\r\n    let properties = propertiesStack;\r\n\r\n    for (let prop in payloadParsed) {\r\n      const propType = returnPropertyType(payloadParsed[prop]);\r\n      const propZerada = prop == 0;\r\n\r\n      if (propType === 'object' || propType === 'array') {\r\n        properties.push({\r\n          propertyName: propZerada ? '-- start --' : `${prop} (START)`,\r\n          type: propType,\r\n          description: '',\r\n          required: true,\r\n          fillRule: '',\r\n          validated: false\r\n        });\r\n        examinePayload(payloadParsed[prop], properties);\r\n\r\n        properties.push({\r\n          propertyName: propZerada ? '-- end --' : `${prop} (END)`,\r\n          type: propType,\r\n          description: '',\r\n          required: true,\r\n          fillRule: '',\r\n          validated: false\r\n        });\r\n\r\n      } else {\r\n        properties.push({\r\n          propertyName: prop,\r\n          type: propType,\r\n          description: '',\r\n          required: true,\r\n          fillRule: '',\r\n          validated: false\r\n        });\r\n      }\r\n    }\r\n\r\n    return applyIndexValue(properties);\r\n  }\r\n\r\n  function applyIndexValue(propertiesList) {\r\n    return propertiesList.map((prop, index) => {\r\n      return { key: index + 1, ...prop };\r\n    });\r\n  }\r\n\r\n  function returnPropertyType(prop) {\r\n    if (Array.isArray(prop)) return 'array';\r\n    if (prop === \"\") return 'string'\r\n    if (prop === 0) return 'number'\r\n    if (!prop) return 'null';\r\n    return typeof (prop);\r\n  }\r\n\r\n  function saveRowChanges(values) {\r\n    let selectedRowInformation = propList.find(pos => pos.key === editingRow);\r\n    let collapsedObjects = { ...selectedRowInformation, ...values };\r\n    let indexPosition = propList.findIndex(pos => pos.key === editingRow);\r\n    let allPropList = [...propList];\r\n    allPropList[indexPosition] = collapsedObjects;\r\n    setPropList(allPropList);\r\n    setEditingRow(null);\r\n  }\r\n\r\n  function changeRequiredRow(rowKey, boolean) {\r\n    let selectedRowInformation = propList.find(pos => pos.key === rowKey);\r\n    selectedRowInformation.required = boolean;\r\n    let indexPosition = propList.findIndex(pos => pos.key === editingRow);\r\n    let allPropList = [...propList];\r\n    allPropList[indexPosition] = selectedRowInformation;\r\n    setPropList(allPropList);\r\n  }\r\n\r\n  function handlerRowBackground(rowProperties) {\r\n    return rowProperties.required ? '' : 'not-required-row';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SessionContext.Provider value={{ projectId, propList, payloadChecked }}>\r\n        {propList.length ?\r\n          <div\r\n            className=\"animate__animated animate__fadeInLeft\"\r\n            style={{ display: 'flex', flexDirection: 'row', width: '100%', justifyContent: 'end', paddingRight: '20px' }}\r\n          >\r\n            <div>\r\n              <ExportButton />\r\n              <ConfirmModal\r\n                buttonText=\"Delete Project\"\r\n                buttonType=\"primary\"\r\n                buttonDanger={true}\r\n                modalTitle=\"Delete current project\"\r\n                modalText=\"Confirm to delete current project\"\r\n                confirmAction={handleDeleteProject}\r\n              />\r\n            </div>\r\n          </div>\r\n          : <></>}\r\n\r\n        <Form form={formPayloadAnalyzed} onFinish={saveRowChanges}>\r\n          {propList.length ?\r\n            <div\r\n              className=\"animate__animated animate__fadeInLeft\"\r\n              style={{ margin: '10px 20px 20px 20px' }}>\r\n              <Table\r\n                rowClassName={(record, index) => handlerRowBackground(record)}\r\n                dataSource={propList}\r\n                columns={defaultColumns}\r\n                sticky={true}\r\n                pagination={false}\r\n                scroll={{ y: '50vh' }}\r\n                bordered={false}\r\n                size={'small'}\r\n                style={{ boxShadow: '0px 0px 10px 0px rgb(34 34 34 / 15%)', fontSize: \"5px\" }}\r\n              />\r\n            </div>\r\n            : <></>}\r\n        </Form>\r\n\r\n        <div style={{ display: 'flex', flexDirection: 'row', width: '100%', justifyContent: 'space-between', padding: '20px', paddingBottom: '0px' }}>\r\n          <Form name=\"payloadAnalyzed\" onFinish={startExamination} style={{ width: '80%' }}>\r\n            <div style={{ width: '100%' }}>\r\n              <Collapse\r\n                className=\"collapse-wrapper\"\r\n                defaultActiveKey={['1']}\r\n                style={{ backgroundColor: 'rgb(16,16,16,0.85)', border: 'none', borderBottom: '20px', borderRadius: '10px', boxShadow: '0px 0px 10px 0px rgb(34 34 34 / 15%)' }}\r\n              >\r\n                <Panel\r\n                  header=\"Payload to be checked\"\r\n                  key=\"1\"\r\n                  style={{ border: 'none' }}\r\n                >\r\n                  <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'left', padding: '15px', paddingTop: '0' }}>\r\n                    <span>\r\n                      Enter the payload to be checked below, all payload fields will be detailed.\r\n                    </span>\r\n                  </div>\r\n                  <Form.Item name=\"payloadInput\">\r\n                    <TextArea\r\n                      placeholder=\"Paste a valid payload to be checked.\"\r\n                      style={{\r\n                        resize: 'none',\r\n                        border: 'none',\r\n                        maxHeight: '200px',\r\n                        minHeight: '200px',\r\n                        overflowY: \"scroll\",\r\n                        borderRadius: '5px',\r\n                        boxShadow: '0px 0px 10px 0px rgb(34 34 34 / 5%)'\r\n                      }}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item style={{ marginBottom: '5px' }}>\r\n                    <Button\r\n                      style={{ width: '100%', height: '50px', boxShadow: '0px 0px 10px 0px rgb(34 34 34 / 20%)' }}\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                    >\r\n                      <strong>Check Payload</strong>\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Panel>\r\n              </Collapse>\r\n\r\n            </div>\r\n          </Form>\r\n          <div style={{ width: '100%' }}>\r\n          </div>\r\n        </div>\r\n      </SessionContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Analyzer\r\n","import React from 'react'\r\nimport Analyzer from '../components/Analyzer/Analyzer';\r\n\r\nfunction Checker() {\r\n  return (\r\n    <>\r\n      <Analyzer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Checker\r\n"],"names":["STORAGE_PREFIX","DATE","moment","this","__handleLocation","userLocation","window","navigator","language","format","loadStorageFromClient","localStorage","getItem","buttonText","buttonType","buttonDanger","modalTitle","modalText","confirmAction","useState","isModalOpen","setIsModalOpen","type","danger","onClick","title","open","onOk","onCancel","useContext","SessionContext","propList","projectId","payloadChecked","style","margin","text","forEach","line","propertyName","description","fillRule","required","blob","Blob","link","document","createElement","url","URL","createObjectURL","href","setAttribute","click","ExtensionConversor","DownloadOutlined","propFiltered","map","p","sheet","XLSX","book","xlsDocument","bookType","Panel","Collapse","createContext","editingRow","setEditingRow","Form","formPayloadAnalyzed","setProjectId","setPayloadChecked","setPropList","useEffect","length","newUuid","uuidv4","project","newSave","clientStorageSave","currentDate","newFormatedDate","projectAlreadyExists","JSON","parse","projects","find","uuid","filter","last_update","push","created_at","selectedProject","setItem","stringify","ProjectSession","payload_checked","prop_list","saveCurrentChanges","storagedProject","currentProject","defaultColumns","dataIndex","key","render","record","name","className","_","marginTop","defaultChecked","onChange","checked","rowKey","boolean","selectedRowInformation","pos","indexPosition","findIndex","allPropList","changeRequiredRow","setFieldValue","setFieldsValue","htmlType","feedbackMessage","success","message","examinePayload","payloadParsed","propertiesStack","properties","prop","propType","returnPropertyType","propZerada","validated","index","Array","isArray","Provider","value","display","flexDirection","width","justifyContent","paddingRight","console","log","form","onFinish","values","collapsedObjects","rowClassName","dataSource","columns","sticky","pagination","scroll","y","bordered","size","boxShadow","fontSize","padding","paddingBottom","payloadInput","error","parseInput","payloadSimplified","overallArrayClean","slice","reduceArraysForSimplicity","examined","defaultActiveKey","backgroundColor","border","borderBottom","borderRadius","header","alignItems","paddingTop","TextArea","placeholder","resize","maxHeight","minHeight","overflowY","marginBottom","height"],"sourceRoot":""}